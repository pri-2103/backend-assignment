{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x4B1c960D78a1a0766A47a6D2970a679277EB2462",
      "txHash": "0x91473e1c56d47ec7a413ba8919c8401b1842cd97dc021863c945113e8ef3e2df",
      "kind": "uups"
    },
    {
      "address": "0x74857C490Ec0F6a4DB2B15c3ae1Df253bc582797",
      "txHash": "0xf1d739f851c41df9d4b91f483352ddca9c83da08cf7d3f598467aa946f71bd58",
      "kind": "uups"
    }
  ],
  "impls": {
    "3bd67de37b41f8940d8f6b991a5608cd0b8b1a6f44f925fe6f56c08d3a042e38": {
      "address": "0xFdD6c3b8C93DE85D8D75965A55667dD96D06655F",
      "txHash": "0xcef4f0971bf06fac5e3c2cce1cb54fafeb1aa8d33994a8383c56afc2519ff6ab",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "userPosts",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_array(t_struct(Post)1433_storage)dyn_storage)",
            "contract": "PostManager",
            "src": "contracts/PostManager.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Post)1433_storage)dyn_storage": {
            "label": "struct PostManager.Post[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Post)1433_storage)dyn_storage)": {
            "label": "mapping(address => struct PostManager.Post[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Post)1433_storage": {
            "label": "struct PostManager.Post",
            "members": [
              {
                "label": "contentHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cc1d796ce67de9ff5116d0f122f8c6d3addc6ecc992b5ef5af4e5d48f4975fcc": {
      "address": "0x9dd690d52c58eF79b0c9F1e424Ec3879F1Ad3F95",
      "txHash": "0xdc7fa98cecfdd95cc6501d4f38745f11c152bcd40224c95c7c65d3aef22ceead",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "userPosts",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_array(t_struct(Post)1613_storage)dyn_storage)",
            "contract": "PostManager",
            "src": "contracts/PostManager.sol:25"
          },
          {
            "label": "following",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "PostManager",
            "src": "contracts/PostManager.sol:27"
          },
          {
            "label": "followers",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PostManager",
            "src": "contracts/PostManager.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Post)1613_storage)dyn_storage": {
            "label": "struct PostManager.Post[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Post)1613_storage)dyn_storage)": {
            "label": "mapping(address => struct PostManager.Post[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Post)1613_storage": {
            "label": "struct PostManager.Post",
            "members": [
              {
                "label": "contentHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
